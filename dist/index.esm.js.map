{"version":3,"file":"index.esm.js","sources":["../src/object/pick/pick.ts","../src/object/sanitize/sanitize.ts"],"sourcesContent":["/**\n * Pick specific keys from an object.\n * @example\n * ```ts\n * const obj = {\n *   \"one\": true,\n *   \"two\": false,\n *   \"foo\": \"bar\"\n * };\n *\n * objPick(obj, ['two', 'foo']);\n *\n * =>\n * {\n *   \"two\": false,\n *   \"foo\": \"bar\"\n * }\n * ```\n *\n * @typedef {Object} Options\n * @property {Boolean} [upsert=false] Create new properties for missing keys.\n * @property {any} [defaultValue] Default value to use for upsert.\n *\n * @param {Object} obj Source object.\n * @param {any[]} keys Array of keys to pick.\n * @param {Options} options Object pick options.\n *\n * @returns {Object} Object with specified keys.\n */\nconst objPick = <Type extends Record<any, any>, Key extends keyof Type>(\n  obj: Type,\n  keys: Key[] | string[],\n  options?: {\n    upsert?: boolean;\n    defaultValue?: any;\n  },\n): Record<typeof keys[any], typeof obj[keyof typeof obj]> => {\n  const { upsert, defaultValue } = options || {};\n  const newObj: Record<any, any> = {};\n\n  keys.forEach((key) => {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      newObj[key] = obj[key];\n    } else if (upsert) {\n      newObj[key] = defaultValue || null;\n    }\n  });\n\n  return newObj;\n};\n\nexport default objPick;\n","/**\n * Sanitize an object.\n * @example\n * ```ts\n * objSanitize({\n *   \"1\": null,\n *   \"2\": \"two\",\n *   \"3\": undefined\n * });\n *\n * =>\n * {\n *   \"2\": \"two\"\n * }\n *\n * objSanitize({\n *   \"foo\": 1,\n *   \"bar\": \"one\"\n * }, {\n *   validate: (value) => typeof value !== 'string',\n * });\n *\n * =>\n * {\n *   \"foo\": 1\n * }\n * ```\n *\n * @typedef {Object} Options\n * @property {Function} [validate] Custom validator function.\n * @property {Boolean} [preserveOriginal=false] Preserve the original object.\n * @property {Boolean} [removeEmptyStrings=false] Remove empty strings.\n * @property {Boolean} [removeEmptyObjects=false] Remove empty nested objects.\n *\n * @param {Object} obj Source object.\n * @param {Options} [options] Object sanitize options.\n *\n * @returns {Object} Sanitized object.\n */\n\nconst objSanitize = <Type extends Record<any, any>>(\n  obj: Type,\n  options?: {\n    validate?: (value: typeof obj[keyof typeof obj]) => boolean;\n    preserveOriginal?: boolean;\n    removeEmptyStrings?: boolean;\n    removeEmptyObjects?: boolean;\n  },\n): Partial<Type> => {\n  const { validate, preserveOriginal, removeEmptyStrings, removeEmptyObjects } =\n    options || {};\n  const objToModify: Type = obj;\n\n  const recurse = (object: Record<any, any>): any => {\n    for (const key in object) {\n      const isInvalid = validate ? !validate(object[key]) : false;\n\n      const isEmptyObject =\n        removeEmptyObjects &&\n        object[key] &&\n        typeof object[key] === 'object' &&\n        Object.keys(object[key]).length === 0;\n\n      const isEmptyStr =\n        removeEmptyStrings &&\n        typeof object[key] === 'string' &&\n        !object[key].trim();\n\n      if (\n        object[key] === null ||\n        object[key] === undefined ||\n        isEmptyStr ||\n        isEmptyObject ||\n        isInvalid\n      ) {\n        delete object[key];\n      } else if (typeof object[key] === 'object') {\n        recurse(object[key]);\n      }\n    }\n  };\n\n  recurse(preserveOriginal ? objToModify : obj);\n\n  return preserveOriginal ? objToModify : obj;\n};\n\nexport default objSanitize;\n"],"names":[],"mappings":";;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BG;AACH,IAAM,OAAO,GAAG,UACd,GAAS,EACT,IAAsB,EACtB,OAGC,EAAA;IAEK,IAAA,EAAA,GAA2B,OAAO,IAAI,EAAE,EAAtC,MAAM,GAAA,EAAA,CAAA,MAAA,EAAE,YAAY,GAAA,EAAA,CAAA,YAAkB,CAAC;IAC/C,IAAM,MAAM,GAAqB,EAAE,CAAC;AAEpC,IAAA,IAAI,CAAC,OAAO,CAAC,UAAC,GAAG,EAAA;AACf,QAAA,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;YAClD,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;AACxB,SAAA;AAAM,aAAA,IAAI,MAAM,EAAE;AACjB,YAAA,MAAM,CAAC,GAAG,CAAC,GAAG,YAAY,IAAI,IAAI,CAAC;AACpC,SAAA;AACH,KAAC,CAAC,CAAC;AAEH,IAAA,OAAO,MAAM,CAAC;AAChB;;ACjDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCG;AAEH,IAAM,WAAW,GAAG,UAClB,GAAS,EACT,OAKC,EAAA;AAEK,IAAA,IAAA,KACJ,OAAO,IAAI,EAAE,EADP,QAAQ,GAAA,EAAA,CAAA,QAAA,EAAE,gBAAgB,GAAA,EAAA,CAAA,gBAAA,EAAE,kBAAkB,GAAA,EAAA,CAAA,kBAAA,EAAE,kBAAkB,wBAC3D,CAAC;IAChB,IAAM,WAAW,GAAS,GAAG,CAAC;IAE9B,IAAM,OAAO,GAAG,UAAC,MAAwB,EAAA;AACvC,QAAA,KAAK,IAAM,GAAG,IAAI,MAAM,EAAE;AACxB,YAAA,IAAM,SAAS,GAAG,QAAQ,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;YAE5D,IAAM,aAAa,GACjB,kBAAkB;gBAClB,MAAM,CAAC,GAAG,CAAC;AACX,gBAAA,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,QAAQ;AAC/B,gBAAA,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;YAExC,IAAM,UAAU,GACd,kBAAkB;AAClB,gBAAA,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,QAAQ;AAC/B,gBAAA,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;AAEtB,YAAA,IACE,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI;AACpB,gBAAA,MAAM,CAAC,GAAG,CAAC,KAAK,SAAS;gBACzB,UAAU;gBACV,aAAa;AACb,gBAAA,SAAS,EACT;AACA,gBAAA,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;AACpB,aAAA;AAAM,iBAAA,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;AAC1C,gBAAA,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AACtB,aAAA;AACF,SAAA;AACH,KAAC,CAAC;IAEF,OAAO,CAAC,gBAAgB,GAAG,WAAW,GAAG,GAAG,CAAC,CAAC;IAE9C,OAAO,gBAAgB,GAAG,WAAW,GAAG,GAAG,CAAC;AAC9C;;;;"}